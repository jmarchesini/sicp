(load "stream.scm")

(define (all-pairs s t)
  (cons-stream
   (list (stream-car s) (stream-car t))
   (interleave
    (interleave
     (stream-map (lambda (x) (list (stream-car s) x))
                 (stream-cdr t))
     (all-pairs (stream-cdr s) (stream-cdr t)))
    (stream-map (lambda (x) (list x (stream-car t)))
                (stream-cdr s)))))

;; 1 ]=> (define ap1 (all-pairs integers integers))
;; ;Value: ap1

;; 1 ]=> (display-stream ap1)
;; (1 1)
;; (1 2)
;; (2 1)
;; (2 2)
;; (3 1)
;; (1 3)
;; (4 1)
;; (2 3)
;; (5 1)
;; (1 4)
;; (6 1)
;; (3 2)
;; (7 1)
;; (1 5)
;; (8 1)
;; (3 3)
;; (9 1)
;; (1 6)
;; (10 1)
;; (4 2)
;; (11 1)
;; (1 7)
;; (12 1)
;; (2 4)
;; (13 1)
;; (1 8)
;; (14 1)
;; (5 2)
;; (15 1)
;; (1 9)
;; (16 1)
;; (3 4)
;; (17 1)
;; (1 10)
;; (18 1)
;; (6 2)
;; (19 1)
;; (1 11)
;; (20 1)
;; (2 5)
;; (21 1)
;; (1 12)
;; (22 1)
;; (7 2)
;; (23 1)
;; (1 13)
;; (24 1)
;; (4 3)
;; (25 1)
;; (1 14)
;; (26 1)
;; (8 2)
;; (27 1)
;; (1 15)
;; (28 1)
;; (2 6)
;; (29 1)
;; (1 16)
;; (30 1)
;; (9 2)
;; (31 1)
;; (1 17)
;; (32 1)
;; (4 4)
;; (33 1)
;; (1 18)
;; (34 1)
;; (10 2)
;; (35 1)
;; (1 19)
;; (36 1)
;; (2 7)
;; (37 1)
;; (1 20)
;; (38 1)
;; (11 2)
;; (39 1)
